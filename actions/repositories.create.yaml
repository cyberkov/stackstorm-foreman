---
description: "Create a custom repository (resource: POST /katello/api/repositories)"
enabled: true
runner_type: "python-script"
entry_point: lib/action.py
name: repositories.create
pack: foreman
parameters:
  operation:
    type: string
    default: repositories.create
    immutable: true
  connection:
    type: string
    description: "Name of <connection> from this pack's configuration that specifies how to connect to a server."
    required: false
  server:
    type: string
    description: "Optional override of the server in <connection> (required if <connection> is not specified)."
    required: false
  username:
    type: string
    description: "Optional override of the username in <connection> (example: username@domain.tld) (required if <connection> is not specified)."
    required: false
  password:
    type: string
    description: "Optional override of the password in <connection>. (required if <connection> is not specified)"
    required: false
    secret: true
  name:
    type: string
    required: true
  label:
    type: string
    required: false
  product_id:
    type: number
    required: true
    description: "Product the repository belongs to"
  content_type:
    type: string
    required: true
    description: "type of repo"
  url:
    type: string
    required: false
    description: "repository source url"
  gpg_key_id:
    type: number
    required: false
    description: "id of the gpg key that will be assigned to the new repository"
  ssl_ca_cert_id:
    type: number
    required: false
    description: "Idenifier of the SSL CA Cert"
  ssl_client_cert_id:
    type: number
    required: false
    description: "Identifier of the SSL Client Cert"
  ssl_client_key_id:
    type: number
    required: false
    description: "Identifier of the SSL Client Key"
  unprotected:
    type: boolean
    required: false
    description: "true if this repository can be published via HTTP"
  checksum_type:
    type: string
    required: false
    description: "Checksum of the repository, currently 'sha1' & 'sha256'are supported"
  docker_upstream_name:
    type: string
    required: false
    description: "Name of the upstream docker repository"
  docker_tags_whitelist:
    type: array
    required: false
    description: "Comma separated list of tags to sync for Container Image repository"
  download_policy:
    type: string
    required: false
    description: "download policy for yum repos (either 'immediate','on_demand', or 'background')"
  mirror_on_sync:
    type: boolean
    required: false
    description: "true if this repository when synced has to be mirrored from the source andstale rpms removed"
  verify_ssl_on_sync:
    type: boolean
    required: false
    description: "if true, orcharhino will verify the upstream url's SSL certifcates aresigned by a trusted CA"
  upstream_username:
    type: string
    required: false
    description: "Username of the upstream repository user used for authentication"
  upstream_password:
    type: string
    required: false
    description: "Password of the upstream repository user used for authentication"
  ostree_upstream_sync_policy:
    type: string
    required: false
    description: "policies for syncing upstream ostree repositories"
  ostree_upstream_sync_depth:
    type: number
    required: false
    description: "if a custom sync policy is chosen for ostree repositories then a'depth' value must be provided"
  deb_releases:
    type: string
    required: false
    description: "comma separated list of releases to be synched from deb-archive"
  deb_components:
    type: string
    required: false
    description: "comma separated list of repo components to be synched from deb-archive"
  deb_architectures:
    type: string
    required: false
    description: "comma separated list of architectures to be synched from deb-archive"
  ignore_global_proxy:
    type: boolean
    required: false
    description: "if true, will ignore the globally configured proxy when syncing"
  deb_errata_url:
    type: string
    required: false
    description: "URL to a deb_errata service (use only on the security repositories)"
  ignorable_content:
    type: array
    required: false
    description: "List of content units to ignore while syncing a yum repository. Must besubset of rpm,drpm,srpm,distribution,erratum"
  ansible_collection_requirements:
    type: string
    required: false
    description: "Contents of requirement yaml file to sync from URL"
  http_proxy_policy:
    type: string
    required: false
    description: "policies for http proxy for content sync"
  http_proxy_id:
    type: number
    required: false
    description: "ID of a HTTP Proxy"